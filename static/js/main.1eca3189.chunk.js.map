{"version":3,"sources":["redux/actions/actionType.js","redux/actions/paginationActions.js","components/SmartPagination.js","utils/editData.js","utils/dataFind.js","redux/actions/tableActions.js","redux/actions/customerActions.js","redux/actions/orderActions.js","components/SmartTable.js","utils/showingData.js","components/Customers.js","components/Orders.js","components/CustomerDetail.js","redux/actions/productActions.js","components/OrderDetail.js","components/SmartNavbar.js","components/MasterRoute.js","App.js","reportWebVitals.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/customerReducer.js","redux/reducers/orderListReducer.js","redux/reducers/currentShowCountReducer.js","redux/reducers/tableDataReducer.js","redux/reducers/currentPageReducer.js","redux/reducers/generalDataReducer.js","redux/reducers/customerDetailReducer.js","redux/reducers/orderDetailReducer.js","redux/reducers/productReducer.js","index.js","redux/reducers/configureStore.js"],"names":["SETCUSTOMER","SETORDER","SETCURRENTSHOWCOUNT","SETTABLEDATA","SETCURRENTPAGE","SETGENERALDATA","SETCUSTOMERDETAIL","SETCUSTOMERDETAILBYSORT","SETORDERDETAIL","SETORDERDETAILBYSORT","SETPRODUCT","setCurrentPage","data","type","actionTypes","payload","setCurrentShowCount","SmartPagination","state","defaultPageGroup","paginationArray","lastPage","arr","length","innerArr","totalPage","Math","ceil","this","props","currentShowCount","items","number","push","pageGroup","undefined","index","Pagination","Item","active","currentPage","onClick","handleCurentPage","groupNumber","actions","setState","pgArr","currentGroup","tableData","Array","isArray","generalData","createpaginationItems","editData","findLastElement","Row","className","handleCurrentGroup","showPaginationItem","Form","Group","controlId","Control","as","onChange","e","handleGroupCountValue","target","value","Component","connect","currentShowCountReducer","tableDataReducer","currentPageReducer","generalDataReducer","dispatch","bindActionCreators","paginationActions","addLineNumber","editArr","lineNumber","forEach","element","showValue","date","Date","getDate","toString","getMonth","getFullYear","detailFind","id","find","item","setTableData","getCustomers","a","axios","get","then","response","getBaseCustomers","getCustomerDetail","headers","setCustomerDetail","getOrders","dispacth","getBaseOrders","getOrderDetail","setOrderDetail","SmartTable","fields","searchText","clear","cacheData","setFields","columns","field","pageNumber","pageCount","showingData","minIndex","maxIndex","calculateMaxIndex","i","showdata","map","column","dataType","to","handleCustomersDetail","customerId","findCustomerName","handleDetail","filterDatas","filter","filterData","includes","detail","orders","customers","customerDetail","contactName","Container","title","placeholder","handelSearchText","Button","size","searchClick","clearClick","Table","striped","bordered","hover","name","createTableBody","genralDataReducer","customerReducer","orderListReducer","tableActions","customerActions","orderActions","Customers","fetchCustomer","Orders","console","log","fetchOrders","fetchCustomers","fetchBaseOrders","CustomerDetail","Col","companyName","contactTitle","address","street","city","postalCode","country","phone","customerDetailReducer","getProductById","OrderDetail","orderDetail","details","productId","shipAddress","orderDate","requiredDate","shippedDate","shipVia","freight","shipName","region","product","unitPrice","quantity","discount","orderDetailReducer","productReducer","productActions","SmartNavbar","class","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onHandle","MasterRoute","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","order","rootReducer","combineReducers","initialState","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1eca3189.chunk.js","sourcesContent":["export const SETCUSTOMER = \"SETCUSTOMER\";\nexport const SETORDER = \"SETORDER\";\nexport const SETCURRENTSHOWCOUNT = \"SETCURRENTSHOWCOUNT\";\nexport const SETTABLEDATA = \"SETTABLEDATA\";\nexport const SETCURRENTPAGE = \"SETCURRENTPAGE\";\nexport const SETGENERALDATA = \"SETGENERALDATA\";\nexport const SETCUSTOMERDETAIL = \"SETCUSTOMERDETAIL\";\nexport const SETCUSTOMERDETAILBYSORT = \"SETCUSTOMERDETAILBYSORT\";\nexport const SETORDERDETAIL = \"SETORDERDETAIL\";\nexport const SETORDERDETAILBYSORT = \"SETORDERDETAILBYSORT\";\nexport const SETPRODUCT = \"SETPRODUCT\";\n","import * as actionTypes from \"./actionType\";\n\nexport function setCurrentPage(data) {\n  return {\n    type: actionTypes.SETCURRENTPAGE,\n    payload: data,\n  };\n}\n\nexport function setCurrentShowCount(data) {\n  return {\n    type: actionTypes.SETCURRENTSHOWCOUNT,\n    payload: data,\n  };\n}\n","import React, { Component } from \"react\";\nimport { Pagination, Form, Row } from \"react-bootstrap\";\n\n//redux\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\n//actions\nimport * as paginationActions from \"../redux/actions/paginationActions\";\n\nclass SmartPagination extends Component {\n  state = {\n    defaultPageGroup: 0,\n    paginationArray: [],\n    lastPage: 1,\n  };\n\n  findLastElement(arr) {\n    if (arr.length === 0) return;\n    let innerArr = arr[arr.length - 1];\n    let lastElement = innerArr[innerArr.length - 1];\n    return lastElement;\n  }\n\n  createpaginationItems(data) {\n    let totalPage = Math.ceil(data.length / this.props.currentShowCount);\n    let items = [];\n    let paginationArray = [];\n\n    for (let number = 1; number <= totalPage; number++) {\n      items.push(number);\n      if (number % 10 === 0 || number === totalPage) {\n        paginationArray.push(items);\n        items = [];\n      }\n    }\n\n    return paginationArray;\n  }\n\n  showPaginationItem(pageGroup, paginationArray) {\n    if (paginationArray !== undefined || paginationArray !== null) {\n      let items = [];\n      for (let index in paginationArray[pageGroup]) {\n        items.push(\n          <Pagination.Item\n            key={index}\n            active={\n              paginationArray[pageGroup][index] === this.props.currentPage\n            }\n            onClick={() =>\n              this.handleCurentPage(paginationArray[pageGroup][index])\n            }\n          >\n            {paginationArray[pageGroup][index]}\n          </Pagination.Item>\n        );\n      }\n      return items;\n    }\n  }\n\n  handleCurentPage(number, groupNumber) {\n    if (number !== undefined) this.props.actions.setCurrentPage(number);\n    if (groupNumber !== undefined) {\n      this.setState({ defaultPageGroup: groupNumber });\n    }\n  }\n\n  handleCurrentGroup(number, pgArr) {\n    let currentGroup = this.state.defaultPageGroup + number;\n    if (currentGroup < 0 || currentGroup > pgArr.length - 1) return;\n    let currentPage = pgArr[currentGroup][0];\n    this.handleCurentPage(currentPage, currentGroup);\n  }\n\n  handleGroupCountValue(data) {\n    this.props.actions.setCurrentPage(1);\n    this.props.actions.setCurrentShowCount(data);\n  }\n\n  editData() {\n    if (this.props.tableData.length > 0) {\n      return this.props.tableData;\n    } else if (\n      this.props.tableData.length === 0 &&\n      Array.isArray(this.props.generalData)\n    ) {\n      return this.props.generalData;\n    } else return [];\n  }\n\n  render() {\n    const paginationArray = this.createpaginationItems(this.editData());\n    const lastPage = this.findLastElement(paginationArray);\n\n    return (\n      <Row className=\"pl-3\">\n        <Pagination>\n          <Pagination.Item onClick={() => this.handleCurentPage(1, 0)}>\n            First\n          </Pagination.Item>\n          <Pagination.Item\n            onClick={() => this.handleCurrentGroup(-1, paginationArray)}\n          >\n            Prev\n          </Pagination.Item>\n\n          {this.showPaginationItem(\n            this.state.defaultPageGroup,\n            paginationArray\n          )}\n          <Pagination.Item\n            onClick={() => this.handleCurrentGroup(+1, paginationArray)}\n          >\n            Next\n          </Pagination.Item>\n          <Pagination.Item\n            onClick={() =>\n              this.handleCurentPage(lastPage, paginationArray.length - 1)\n            }\n          >\n            Last\n          </Pagination.Item>\n        </Pagination>\n        <Form className=\"col-4\">\n          <Form.Row>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Control\n                as=\"select\"\n                onChange={(e) => this.handleGroupCountValue(e.target.value)}\n              >\n                <option value={10}>10</option>\n                <option value={20}>20</option>\n                <option value={30}>30</option>\n                <option value={50}>50</option>\n                <option value={100}>100</option>\n              </Form.Control>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n      </Row>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentShowCount: state.currentShowCountReducer,\n    tableData: state.tableDataReducer,\n    currentPage: state.currentPageReducer,\n    generalData: state.generalDataReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      setCurrentPage: bindActionCreators(\n        paginationActions.setCurrentPage,\n        dispatch\n      ),\n      setCurrentShowCount: bindActionCreators(\n        paginationActions.setCurrentShowCount,\n        dispatch\n      ),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SmartPagination);\n","export function addLineNumber(arr) {\n  let editArr = [];\n  if (!Array.isArray(arr) && arr.length === 0) return [];\n  let lineNumber = 1;\n  arr.forEach((element) => {\n    element.lineNumber = lineNumber;\n    editArr.push(element);\n    lineNumber++;\n  });\n  return editArr;\n}\n\nexport function showValue(value, type) {\n  if (type === \"Date\") {\n    if (value === \"NULL\") {\n      return \"---\"\n    } else {\n      const date = new Date(value);\n      return (\n        date.getDate().toString() +\n        \"-\" +\n        (date.getMonth() + 1).toString() +\n        \"-\" +\n        date.getFullYear().toString()\n      );\n    }\n    \n  } else return value;\n}\n\n","export function detailFind(id, arr) {\n  if (Array.isArray(arr)) return arr.find((item) => item.id === id);\n}\n","import * as actionTypes from \"./actionType\";\nexport function setTableData(data) {\n  return {\n    type: actionTypes.SETTABLEDATA,\n    payload: data,\n  };\n}\n","import * as actionTypes from \"./actionType\";\nimport axios from \"axios\";\nimport { addLineNumber } from \"../../utils/editData\";\n\nexport function getCustomers() {\n  return async (dispatch) => {\n    return await axios\n      .get(\"https://northwind.now.sh/api/customers\")\n      .then(function (response) {\n        dispatch(getCustomersSuccess(response.data));\n      });\n  };\n}\n\nexport function getBaseCustomers() {\n  return async (dispatch) => {\n    return await axios\n      .get(\"https://northwind.now.sh/api/customers\")\n      .then(function (response) {\n        dispatch(getBaseCustomersSuccess(response.data));\n      });\n  };\n}\n\nexport function getCustomerDetail(id) {\n  return async (dispatch) => {\n    return await axios\n      .get(\"https://northwind.now.sh/api/customers/\" + id, {\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\n      })\n      .then(function (response) {\n        dispatch(getCustomerDetailSuccess(response.data));\n      });\n  };\n}\n\nexport function getCustomersSuccess(data) {\n  return {\n    type: actionTypes.SETGENERALDATA,\n    payload: addLineNumber(data),\n  };\n}\n\nexport function getBaseCustomersSuccess(data) {\n  return {\n    type: actionTypes.SETCUSTOMER,\n    payload: data,\n  };\n}\n\nexport function getCustomerDetailSuccess(data) {\n  return {\n    type: actionTypes.SETCUSTOMERDETAIL,\n    payload: data,\n  };\n}\n\nexport function setCustomerDetail(data) {\n  return {\n    type: actionTypes.SETCUSTOMERDETAILBYSORT,\n    payload: data,\n  };\n}\n","import * as actionTypes from \"./actionType\";\nimport axios from \"axios\";\nimport { addLineNumber } from \"../../utils/editData\";\n\nexport function getOrders() {\n  return async (dispacth) => {\n    return await axios\n      .get(\"https://northwind.now.sh/api/orders\")\n      .then((response) => {\n        dispacth(getOrdersSuccess(response.data));\n      });\n  };\n}\n\nfunction getOrdersSuccess(data) {\n  return {\n    type: actionTypes.SETGENERALDATA,\n    payload: addLineNumber(data),\n  };\n}\n\nexport function getBaseOrders() {\n  return async (dispatch) => {\n    return await axios\n      .get(\"https://northwind.now.sh/api/orders\")\n      .then(function (response) {\n        dispatch(getBaseOrdersSuccess(response.data));\n      });\n  };\n}\n\nfunction getBaseOrdersSuccess(data) {\n  return {\n    type: actionTypes.SETORDER,\n    payload: data,\n  };\n}\n\nexport function getOrderDetail(id) {\n  return async (dispatch) => {\n    return await axios\n      .get(\"https://northwind.now.sh/api/orders/\" + id, {\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\n      })\n      .then(function (response) {\n        dispatch(getOrderDetailSuccess(response.data));\n      });\n  };\n}\n\nfunction getOrderDetailSuccess(data) {\n  return {\n    type: actionTypes.SETORDERDETAIL,\n    payload: data,\n  };\n}\n\nexport function setOrderDetail(data) {\n  return {\n    type: actionTypes.SETORDERDETAILBYSORT,\n    payload: data,\n  };\n}\n","import React, { Component } from \"react\";\n\n//redux\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\n// react-bootstrap\nimport { Table, Container, Form, Button, Row } from \"react-bootstrap\";\n\n//components\nimport SmartPagination from \"./SmartPagination\";\n\n//utils\nimport { filterData, showdata } from \"../utils/showingData\";\nimport { showValue } from \"../utils/editData\";\nimport { detailFind } from \"../utils/dataFind\";\n\n//actions\nimport * as tableActions from \"../redux/actions/tableActions\";\nimport * as customerActions from \"../redux/actions/customerActions\";\nimport * as orderActions from \"../redux/actions/orderActions\";\n\n//router\nimport { Link } from \"react-router-dom\";\n\nclass SmartTable extends Component {\n  state = {\n    fields: [],\n    searchText: \"\",\n    clear: false,\n    cacheData: [],\n  };\n  componentDidMount() {\n    this.setFields();\n  }\n  componentDidUpdate() {\n    if (this.state.cacheData !== this.props.generalData) {\n      this.props.actions.setTableData(this.props.generalData);\n      this.setState({ cacheData: this.props.generalData });\n    }\n  }\n\n  setFields() {\n    let fields = [];\n    for (const index in this.props.columns) {\n      fields.push(this.props.columns[index].field);\n    }\n    this.setState({ fields });\n  }\n\n  createTableBody() {\n    let data = [];\n    data = this.props.tableData;\n\n    if (data.length === 0)\n      return <p className=\"mr-auto ml-auto\">Search is not found</p>;\n\n    data = showdata(this.props.currentPage, data, this.props.currentShowCount);\n\n    return data.map((item) => (\n      <tr key={item.id}>\n        <td>{item.lineNumber}</td>\n        {this.props.columns.map((column) => (\n          <td>{showValue(item[column.field], column.type)}</td>\n        ))}\n        {this.props.dataType === \"order\" && (\n          <td>\n            <Link\n              to=\"/customerDetail\"\n              onClick={() => this.handleCustomersDetail(item.customerId)}\n            >\n              {this.findCustomerName(item.customerId)}\n            </Link>\n          </td>\n        )}\n        <td>\n          <Link\n            to={\n              this.props.dataType === \"order\"\n                ? \"/orderDetail\"\n                : \"/customerDetail\"\n            }\n            onClick={() => this.handleDetail(item.id, this.props.dataType)}\n          >\n            Detail\n          </Link>\n        </td>\n      </tr>\n    ));\n  }\n\n  handelSearchText(searchText) {\n    this.setState({ searchText });\n    this.setState({ clear: true });\n  }\n\n  searchClick() {\n    let filterDatas = filterData(\n      this.props.generalData,\n      this.state.searchText,\n      this.state.fields\n    );\n    this.props.actions.setTableData(filterDatas);\n  }\n\n  clearClick() {\n    this.setState({ clear: false });\n    this.setState({ searchText: \"\" });\n  }\n\n  handleDetail(id, type) {\n    let detail = {};\n    if (type === \"order\") {\n      detail = detailFind(id, this.props.orders);\n      if (detail === undefined) this.props.actions.getOrderDetail(id);\n      else this.props.actions.setOrderDetail(detail);\n    } else if (type === \"customer\") {\n      detail = detailFind(id, this.props.customers);\n      if (detail === undefined) this.props.actions.getCustomerDetail(id);\n      else this.props.actions.setCustomerDetail(detail);\n    }\n  }\n\n  handleCustomersDetail(id) {\n    let customerDetail = detailFind(id, this.props.customers);\n    if (customerDetail === undefined)\n      this.props.actions.getCustomerDetail(id.toString());\n    else this.props.actions.setCustomerDetail(customerDetail);\n  }\n  findCustomerName(id) {\n    let customerDetail = detailFind(id, this.props.customers);\n    if (customerDetail === undefined) return \"\";\n    else return customerDetail.contactName;\n  }\n\n  render() {\n    return (\n      <Container className=\"justify\">\n        <h2 className=\"text-center mt-5\">{this.props.title}</h2>\n        <Row className=\"pr-2 mt-3 mb-4\">\n          <Form className=\"col-3 ml-auto\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={this.state.searchText}\n              onChange={(e) => this.handelSearchText(e.target.value)}\n            />\n          </Form>\n          <Button className=\"mr-2\" size=\"sm\" onClick={() => this.searchClick()}>\n            Search\n          </Button>\n          {this.state.clear && (\n            <Button size=\"sm\" onClick={() => this.clearClick()}>\n              Clear\n            </Button>\n          )}\n        </Row>\n\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Line No:</th>\n              {this.props.columns.map((column) => (\n                <th key={column.name}>{column.name}</th>\n              ))}\n              {this.props.dataType === \"order\" && <th>Customer Name</th>}\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>{this.createTableBody()}</tbody>\n        </Table>\n        <SmartPagination data={this.props.data} />\n      </Container>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    tableData: state.tableDataReducer,\n    generalData: state.genralDataReducer,\n    currentPage: state.currentPageReducer,\n    currentShowCount: state.currentShowCountReducer,\n    customers: state.customerReducer,\n    orders: state.orderListReducer,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      setTableData: bindActionCreators(tableActions.setTableData, dispatch),\n      getCustomerDetail: bindActionCreators(\n        customerActions.getCustomerDetail,\n        dispatch\n      ),\n      setCustomerDetail: bindActionCreators(\n        customerActions.setCustomerDetail,\n        dispatch\n      ),\n      getOrderDetail: bindActionCreators(orderActions.getOrderDetail, dispatch),\n      setOrderDetail: bindActionCreators(orderActions.setOrderDetail, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SmartTable);\n","import { addLineNumber } from \"./editData\";\n\nexport function showdata(pageNumber, data, pageCount) {\n  let showingData = [];\n  if (data === null || data === undefined) return showingData;\n\n  const minIndex = (pageNumber - 1) * pageCount;\n  const maxIndex = calculateMaxIndex(data, pageCount * pageNumber);\n  if (minIndex === maxIndex) showingData.push(data[minIndex]);\n  for (let i = minIndex; i < maxIndex; i++) {\n    showingData.push(data[i]);\n  }\n  return showingData;\n}\n\nexport function filterData(data, filter, fields) {\n  if (filter.length === 0 || filter === undefined) return data;\n  let filterData = [];\n  data.forEach((element) => {\n    fields.forEach((field) => {\n      if (element[field].toString().includes(filter)) filterData.push(element);\n    });\n  });\n\n  return addLineNumber(filterData);\n}\n\nfunction calculateMaxIndex(data, number) {\n  const maxIndex = data.length;\n  if (number < maxIndex) return number;\n  else if (number > maxIndex) return maxIndex;\n  else return number;\n}\n","import React, { Component } from \"react\";\nimport SmartTable from \"./SmartTable\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport * as customerActions from \"../redux/actions/customerActions\";\nimport * as tableActions from \"../redux/actions/tableActions\";\n\nclass Customers extends Component {\n  componentWillMount() {\n    this.props.actions.fetchCustomer();\n    this.props.actions.getBaseCustomers();\n  }\n\n  componentDidUpdate() {\n    this.props.actions.fetchCustomer();\n  }\n\n  render() {\n    let columns = [\n      {\n        name: \"Customer Name\",\n        field: \"contactName\",\n        type: \"String\",\n      },\n      {\n        name: \"Company Name\",\n        field: \"companyName\",\n        type: \"String\",\n      },\n      {\n        name: \"Contact Title\",\n        field: \"contactTitle\",\n        type: \"String\",\n      },\n    ];\n    return (\n      <div>\n        <SmartTable columns={columns} dataType=\"customer\" title=\"Customers\" />\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    //stateler\n    customers: state.customerReducer,\n    generalData: state.generalDataReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchCustomer: bindActionCreators(customerActions.getCustomers, dispatch),\n      getBaseCustomers: bindActionCreators(\n        customerActions.getBaseCustomers,\n        dispatch\n      ),\n      setTableData: bindActionCreators(tableActions.setTableData, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Customers);\n","import React, { Component } from \"react\";\n//components\nimport SmartTable from \"./SmartTable\";\n\n//redux\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\n//actions\nimport * as orderActions from \"../redux/actions/orderActions\";\nimport * as customerActions from \"../redux/actions/customerActions\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    console.log(\"fcergvrdefbvgrtbrtbrtd\");\n    this.props.actions.fetchOrders();\n    this.props.actions.fetchCustomers();\n    this.props.actions.fetchBaseOrders();\n  }\n  componentDidUpdate() {\n    this.props.actions.fetchOrders();\n    this.props.actions.fetchCustomers();\n  }\n\n  render() {\n    let columns = [\n      {\n        name: \"Order Date\",\n        field: \"orderDate\",\n        type: \"Date\",\n      },\n      {\n        name: \"Required Date\",\n        field: \"requiredDate\",\n        type: \"Date\",\n      },\n      {\n        name: \"Shipped Date\",\n        field: \"shippedDate\",\n        type: \"Date\",\n      },\n      {\n        name: \"Ship Via\",\n        field: \"shipVia\",\n        type: \"Number\",\n      },\n      {\n        name: \"Freight\",\n        field: \"freight\",\n        type: \"Number\",\n      },\n      {\n        name: \"Ship Name\",\n        field: \"shipName\",\n        type: \"String\",\n      },\n    ];\n    return (\n      <div>\n        <SmartTable columns={columns} dataType=\"order\" title=\"Orders\" />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orders: state.orderListReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchOrders: bindActionCreators(orderActions.getOrders, dispatch),\n      fetchCustomers: bindActionCreators(\n        customerActions.getBaseCustomers,\n        dispatch\n      ),\n      fetchBaseOrders: bindActionCreators(orderActions.getBaseOrders, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n","import { Component } from \"react\";\n//react-bootstrap\nimport { Col, Container, Row } from \"react-bootstrap\";\n\n//redux\nimport { connect } from \"react-redux\";\n\nclass CustomerDetail extends Component {\n  render() {\n    return (\n      <Container>\n        <div className=\"bg-warning d-flex justify-content-center rounded-pill mt-2\">\n          <h2>Customer Details</h2>\n        </div>\n\n        <Row className=\"p-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Contact Name:</Col>\n              <Col className=\"text-left\">\n                {this.props.customerDetail.contactName}\n              </Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Company Name:</Col>\n              <Col>{this.props.customerDetail.companyName}</Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"pl-3 pr-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Contact Title:</Col>\n              <Col className=\"text-left\">\n                {this.props.customerDetail.contactTitle}\n              </Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\"></Col>\n              <Col></Col>\n            </Row>\n          </Col>\n        </Row>\n        <div className=\" d-flex justify-content-start rounded-pill mt-5\">\n          <h3>Address Details</h3>\n        </div>\n\n        <Row className=\"p-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Street:</Col>\n              <Col className=\"text-left\">\n                {this.props.customerDetail.address.street}\n              </Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">City:</Col>\n              <Col>{this.props.customerDetail.address.city}</Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"pl-3 pr-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Postal Code:</Col>\n              <Col className=\"text-left\">\n                {this.props.customerDetail.address.postalCode}\n              </Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Country</Col>\n              <Col>{this.props.customerDetail.address.country}</Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"p-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Phone:</Col>\n              <Col className=\"text-left\">\n                {this.props.customerDetail.address.phone}\n              </Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\"></Col>\n              <Col></Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerDetail: state.customerDetailReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {},\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerDetail);\n","import * as actionTypes from \"./actionType\";\nimport axios from \"axios\";\n\nexport function getProductById(id) {\n  return async (dispacth) => {\n    return await axios\n      .get(\"https://northwind.now.sh/api/products/\" + id)\n      .then((response) => {\n        dispacth(getProductByIdSuccess(response.data));\n      });\n  };\n}\n\nfunction getProductByIdSuccess(data) {\n  return {\n    type: actionTypes.SETPRODUCT,\n    payload: data,\n  };\n}\n","import { Component } from \"react\";\n//react-bootstrap\nimport { Col, Container, Row } from \"react-bootstrap\";\n\n//redux\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\n//utils\nimport { showValue } from \"../utils/editData\";\n\n//actions\nimport * as productActions from \"../redux/actions/productActions\";\n\nclass OrderDetail extends Component {\n  componentDidMount() {\n    let id = this.props.orderDetail.details[0].productId;\n    if (id !== undefined) this.props.actions.getProductById(id);\n  }\n  componentDidUpdate() {}\n  render() {\n    let orderDetail = this.props.orderDetail;\n    let address = this.props.orderDetail.shipAddress;\n    let details = this.props.orderDetail.details[0];\n\n    return (\n      <Container className=\"\">\n        <div className=\"bg-warning d-flex justify-content-center rounded-pill mt-2\">\n          <h2>Order Details</h2>\n        </div>\n\n        <Row className=\"p-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Order Date:</Col>\n              <Col className=\"text-left\">\n                {showValue(orderDetail.orderDate, \"Date\")}\n              </Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Required Date:</Col>\n              <Col>{showValue(orderDetail.requiredDate, \"Date\")}</Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"pl-3 pr-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Shipped Date:</Col>\n              <Col className=\"text-left\">\n                {showValue(orderDetail.shippedDate, \"Date\")}\n              </Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Ship Via:</Col>\n              <Col>{orderDetail.shipVia}</Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"p-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Freight:</Col>\n              <Col className=\"text-left\">{orderDetail.freight}</Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Ship Name:</Col>\n              <Col>{orderDetail.shipName}</Col>\n            </Row>\n          </Col>\n        </Row>\n\n        <div className=\" d-flex justify-content-start rounded-pill mt-5\">\n          <h3>Address Details</h3>\n        </div>\n\n        <Row className=\"p-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Street:</Col>\n              <Col className=\"text-left\">{address.street}</Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">City:</Col>\n              <Col>{address.city}</Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"pl-3 pr-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Postal Code:</Col>\n              <Col className=\"text-left\">{address.postalCode}</Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Country</Col>\n              <Col>{address.country}</Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"p-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Region:</Col>\n              <Col className=\"text-left\">{address.region}</Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\"></Col>\n              <Col></Col>\n            </Row>\n          </Col>\n        </Row>\n\n        <div className=\" d-flex justify-content-start rounded-pill mt-5\">\n          <h3>Product Details</h3>\n        </div>\n        <Row className=\"p-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Product:</Col>\n              <Col className=\"text-left\">{this.props.product.name}</Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Unit Price:</Col>\n              <Col>{details.unitPrice}</Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"pl-3 pr-3\">\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Quantity:</Col>\n              <Col className=\"text-left\">{details.quantity}</Col>\n            </Row>\n          </Col>\n          <Col className=\"border-bottom border-dark\">\n            <Row>\n              <Col className=\"font-weight-bold\">Discount</Col>\n              <Col>{details.discount}</Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orderDetail: state.orderDetailReducer,\n    product: state.productReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      getProductById: bindActionCreators(\n        productActions.getProductById,\n        dispatch\n      ),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetail);\n","import React, { Component } from \"react\";\n\n//router\nimport { Link } from \"react-router-dom\";\n\n//redux\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\n//actions\nimport * as paginationActions from \"../redux/actions/paginationActions\";\n\nclass SmartNavbar extends Component {\n  onHandle() {\n    this.props.actions.setCurrentPage(1);\n    this.props.actions.setCurrentShowCount(10);\n  }\n\n  render() {\n    return (\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <a class=\"navbar-brand\" href=\"/\">\n          Toonch-i Store\n        </a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-item \">\n              <Link\n                to=\"/customers\"\n                class=\"nav-link\"\n                onClick={() => this.onHandle()}\n              >\n                CUSTOMERS <span class=\"sr-only\">(current)</span>\n              </Link>\n            </li>\n            <li class=\"nav-item\">\n              <Link to=\"/orders\" class=\"nav-link\">\n                ORDERS\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentShowCount: state.currentShowCountReducer,\n    tableData: state.tableDataReducer,\n    currentPage: state.currentPageReducer,\n    generalData: state.generalDataReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      setCurrentPage: bindActionCreators(\n        paginationActions.setCurrentPage,\n        dispatch\n      ),\n      setCurrentShowCount: bindActionCreators(\n        paginationActions.setCurrentShowCount,\n        dispatch\n      ),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SmartNavbar);\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Customers from \"./Customers\";\nimport Orders from \"./Orders\";\nimport CustomerDetail from \"./CustomerDetail\";\nimport OrderDetail from \"./OrderDetail\";\nimport SmartNavbar from \"./SmartNavbar\";\n\nexport default class MasterRoute extends Component {\n  render() {\n    return (\n      <div>\n        <SmartNavbar />\n        <Switch>\n          <Route path=\"/customers\" component={Customers}></Route>\n          <Route path=\"/orders\" component={Orders}></Route>\n          <Route path=\"/customerDetail\" component={CustomerDetail}></Route>\n          <Route path=\"/orderDetail\" component={OrderDetail}></Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n","import MasterRoute from \"./components/MasterRoute\";\n\nfunction App() {\n  return <MasterRoute />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default {\n  customers: [],\n  order: [],\n  currentShowCount: 10,\n  tableData: [],\n  currentPage: 1,\n  generalData: [],\n  customerDetail: {},\n  orderDetail: {},\n  product: {},\n};\n","import { combineReducers } from \"redux\";\nimport customerReducer from \"./customerReducer\";\nimport orderListReducer from \"./orderListReducer\";\nimport currentShowCountReducer from \"./currentShowCountReducer\";\nimport tableDataReducer from \"./tableDataReducer\";\nimport currentPageReducer from \"./currentPageReducer\";\nimport genralDataReducer from \"./generalDataReducer\";\nimport customerDetailReducer from \"./customerDetailReducer\";\nimport orderDetailReducer from \"./orderDetailReducer\";\nimport productReducer from \"./productReducer\";\n\nconst rootReducer = combineReducers({\n  customerReducer,\n  orderListReducer,\n  currentShowCountReducer,\n  tableDataReducer,\n  currentPageReducer,\n  genralDataReducer,\n  customerDetailReducer,\n  orderDetailReducer,\n  productReducer,\n});\n\nexport default rootReducer;\n","import * as actionTypes from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default function customerReducer(\n  state = initialState.customers,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.SETCUSTOMER:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default function orderListReducer(state = initialState.order, action) {\n  switch (action.type) {\n    case actionTypes.SETORDER:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default function currentShowCountReducer(\n  state = initialState.currentShowCount,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.SETCURRENTSHOWCOUNT:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import initialState from \"./initialState\";\nimport * as actionTypes from \"../actions/actionType\";\nexport default function tableDataReducer(\n  state = initialState.tableData,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.SETTABLEDATA:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default function currentPageReducer(\n  state = initialState.currentPage,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.SETCURRENTPAGE:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default function generalDataReducer(\n  state = initialState.generalData,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.SETGENERALDATA:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default function customerDetailReducer(\n  state = initialState.customerDetail,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.SETCUSTOMERDETAIL:\n      return action.payload;\n    case actionTypes.SETCUSTOMERDETAILBYSORT:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default function orderDetailReducer(\n  state = initialState.orderDetail,\n  action\n) {\n  switch (action.type) {\n    case actionTypes.SETORDERDETAIL:\n      return action.payload;\n    case actionTypes.SETORDERDETAILBYSORT:\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n}\n","import initialState from \"./initialState\";\nimport * as actionTypes from \"../actions/actionType\";\nexport default function tableDataReducer(state = initialState.product, action) {\n  switch (action.type) {\n    case actionTypes.SETPRODUCT:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/reducers/configureStore\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./index\";\nimport thunk from \"redux-thunk\";\n\nexport default function configureStore() {\n  return createStore(rootReducer, applyMiddleware(thunk));\n}\n"],"sourceRoot":""}